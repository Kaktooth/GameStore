name: "game_store"
services:
#  java:
#    image: amazoncorretto:11-alpine-jdk
  recommendation-service:
    depends_on:
#      - java
      - kafka1
      - db
      - mongodb
    build: .
    image: "recommendation-service"
    restart: always
    ports:
      - "8080:8080"
    environment:
      NODE_ENV: production
      DB_HOST: db
      DB_PORT: 5432
      DB_USER: postgres
      DB_PASSWORD: admin
      DB_NAME: game-store-db
      CONN_STR: mongodb://user:pass@user-data
    command: '/bin/bash -c "sleep 5; mongosh $$CONN_STR --eval \"show dbs;\""'
    links:
      - db
      - mongodb
    networks:
      prometheus-network:
        ipv4_address: 172.31.0.2
  db:
    image: "postgres-restored"
    build: ./docker-db
    restart: always
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=admin
      - POSTGRES_DB=game-store-db
    ports:
      - '5432:5432'
#    stdin_open: true
#    tty: true
    networks:
      prometheus-network:
        ipv4_address: 172.31.0.3

  zoo1:
    image: confluentinc/cp-zookeeper:7.3.2
    hostname: zoo1
    container_name: zoo1
    ports:
      - "2181:2181"
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_SERVER_ID: 1
      ZOOKEEPER_SERVERS: zoo1:2888:3888
    networks:
      prometheus-network:
        ipv4_address: 172.31.0.4

  kafka1:
    image: confluentinc/cp-kafka:7.3.2
    hostname: kafka1
    container_name: kafka1
    ports:
      - "9092:9092"
      - "29092:29092"
      - "9999:9999"
    environment:
      KAFKA_ADVERTISED_LISTENERS: INTERNAL://kafka1:19092,EXTERNAL://${DOCKER_HOST_IP:-172.31.0.5}:9092,DOCKER://host.docker.internal:29092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INTERNAL:PLAINTEXT,EXTERNAL:PLAINTEXT,DOCKER:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: INTERNAL
      KAFKA_ZOOKEEPER_CONNECT: "zoo1:2181"
      KAFKA_BROKER_ID: 1
      KAFKA_LOG4J_LOGGERS: "kafka.controller=INFO,kafka.producer.async.DefaultEventHandler=INFO,state.change.logger=INFO"
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_JMX_PORT: 9999
      KAFKA_JMX_HOSTNAME: ${DOCKER_HOST_IP:-172.31.0.2}
      KAFKA_AUTHORIZER_CLASS_NAME: kafka.security.authorizer.AclAuthorizer
      KAFKA_ALLOW_EVERYONE_IF_NO_ACL_FOUND: "true"
    depends_on:
      - zoo1
    networks:
      prometheus-network:
        ipv4_address: 172.31.0.5
#  schema-registry:
#    image: confluentinc/cp-schema-registry:5.0.0
#    environment:
#      SCHEMA_REGISTRY_KAFKASTORE_CONNECTION_URL: "zoo1:2181"
#      SCHEMA_REGISTRY_HOST_NAME: schema-registry
#    depends_on:
#      - zoo1
#      - kafka1
#    ports:
#      - '8081:8081'
#    networks:
#      prometheus-network:
#        ipv4_address: 172.31.0.16
#  connect:
#    hostname: connect
#    image: jcustenborder/kafka-connect-all
#    depends_on:
#      - schema-registry
#      - kafka1
#    ports:
#      - '8083:8083'
#    environment:
#      CONNECT_BOOTSTRAP_SERVERS: "kafka1:9092"
#      CONNECT_REST_ADVERTISED_HOST_NAME: target-connect
#      CONNECT_PRODUCER_COMPRESSION_TYPE: lz4
#      CONNECT_GROUP_ID: connect
#      CONNECT_KEY_CONVERTER: io.confluent.connect.avro.AvroConverter
#      CONNECT_KEY_CONVERTER_SCHEMA_REGISTRY_URL: http://schema-registry:8081
#      CONNECT_VALUE_CONVERTER: io.confluent.connect.avro.AvroConverter
#      CONNECT_VALUE_CONVERTER_SCHEMA_REGISTRY_URL: http://schema-registry:8081
#      CONNECT_CONFIG_STORAGE_TOPIC: connect_config
#      CONNECT_CONFIG_STORAGE_REPLICATION_FACTOR: 1
#      CONNECT_OFFSET_STORAGE_TOPIC: connect_offset
#      CONNECT_OFFSET_STORAGE_REPLICATION_FACTOR: 1
#      CONNECT_STATUS_STORAGE_TOPIC: connect_status
#      CONNECT_STATUS_STORAGE_REPLICATION_FACTOR: 1
#      CONNECT_INTERNAL_KEY_CONVERTER: org.apache.kafka.connect.json.JsonConverter
#      CONNECT_INTERNAL_VALUE_CONVERTER: org.apache.kafka.connect.json.JsonConverter
#      CONNECT_INTERNAL_KEY_CONVERTER_SCHEMAS_ENABLE: 'false'
#      CONNECT_INTERNAL_VALUE_CONVERTER_SCHEMAS_ENABLE: 'false'
#      CONNECT_LOG4J_LOGGERS: 'org.reflections=ERROR'
#    volumes:
#      - './books.xsd:/books.xsd:ro'
#  control-center:
#    image: confluentinc/cp-enterprise-control-center:5.0.0
#    depends_on:
#      - zoo1
#      - kafka1
#      - connect
#    ports:
#      - "9022:9021"
#    environment:
#      CONTROL_CENTER_SCHEMA_REGISTRY_URL: "http://schema-registry:8081/"
#      CONTROL_CENTER_BOOTSTRAP_SERVERS: "kafka1:9092"
#      CONTROL_CENTER_ZOOKEEPER_CONNECT: "zoo1:2181"
#      CONTROL_CENTER_CONNECT_CLUSTER: 'connect:8083'
#      CONTROL_CENTER_REPLICATION_FACTOR: 1
#      CONTROL_CENTER_KSQL_ENABLE: "false"

  mongodb:
    image: mongodb/mongodb-community-server:6.0-ubi8
    environment:
      - MONGO_INITDB_ROOT_USERNAME=user
      - MONGO_INITDB_ROOT_PASSWORD=pass
    volumes:
      - type: bind
        source: ./data
        target: /data/db
    networks:
      prometheus-network:
        ipv4_address: 172.31.0.6
volumes:
  db:
    driver: local

networks:
  prometheus-network:
    driver: bridge
    name: services-network
    ipam:
      driver: default
      config:
        - subnet: 172.31.0.0/16
          gateway: 172.31.0.1